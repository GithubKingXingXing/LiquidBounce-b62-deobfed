//Deobfuscated with https://github.com/PetoPetko/Minecraft-Deobfuscator3000 using mappings "mcp_stable-22-1.8.9 (1)"!

// 
// Decompiled by Procyon v0.5.36
// 

package net.ccbluex.liquidbounce.features.module.modules.exploit;

import net.minecraft.client.audio.ISound;
import net.minecraft.client.audio.PositionedSoundRecord;
import net.minecraft.util.ResourceLocation;
import net.ccbluex.liquidbounce.utils.block.BlockUtils;
import net.minecraft.block.Block;
import net.ccbluex.liquidbounce.features.command.Command;
import net.ccbluex.liquidbounce.LiquidBounce;
import net.ccbluex.liquidbounce.valuesystem.types.BlockValue;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.features.module.Module;

@ModuleInfo(name = "GhostHand", description = "Allows you to inetract with selected blocks through walls.", category = ModuleCategory.EXPLOIT)
public class GhostHand extends Module
{
    public final BlockValue blockValue;
    
    public GhostHand() {
        this.blockValue = new BlockValue("id", 54);
        LiquidBounce.CLIENT.commandManager.registerCommand(new Command("ghosthand", null) {
            @Override
            public void execute(final String[] args) {
                if (args.length <= 1 || !args[1].equalsIgnoreCase("select")) {
                    this.chatSyntax(".ghosthand <select>");
                    return;
                }
                if (args.length > 2) {
                    int id;
                    try {
                        id = Integer.parseInt(args[2]);
                    }
                    catch (NumberFormatException exception) {
                        id = Block.getIdFromBlock(Block.getBlockFromName(args[2]));
                    }
                    if (id != 0) {
                        GhostHand.this.blockValue.setValue(id);
                        this.chat("§aThe block was set to " + BlockUtils.getBlockName(id) + ".");
                        GhostHand$1.mc.getSoundHandler().playSound((ISound)PositionedSoundRecord.create(new ResourceLocation("random.anvil_use"), 1.0f));
                    }
                    else {
                        this.chat("Block was not found or the block is air.");
                    }
                    return;
                }
                this.chat("§7Current: §8" + Block.getBlockById(GhostHand.this.blockValue.asInteger()).getLocalizedName());
                this.chatSyntax(".ghosthand select <name/id>");
            }
        });
    }
}
